using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TriPointsController : JunctionController
{
    private LineController startline;
    private LineController mainline;
    private LineController branchline;

    private bool direction = true; // True - mainline, false - branchline

    public void Setup(Vector2 position, LineController startline, LineController mainline, LineController branchline, bool autogenerated=false) {
        gameObject.transform.position = position;

        this.position = position;
        this.startline = startline;
        this.mainline = mainline;
        this.branchline = branchline;

        this.autogenerated = autogenerated;

        // Connect lines to the junction
        connectLine(startline);
        connectLine(mainline);
        connectLine(branchline);
        
        gameObject.GetComponent<Renderer>().material.color = new Color(255, 0, 0);
    }

    new public LineController nextLine(LineController fromline) {
        Debug.Log("I WAS CALLED!");
        if(fromline == startline){
            if(direction) { return mainline; }
            else          { return branchline; }
        }else if(fromline == mainline){
            if(direction) { return startline; }
            else          { return null; } // Train can't go this way
        }else if(fromline == branchline){
            if(direction) { return null; } // Train can't go this way
            else          { return startline; }
        }else{ // fromline is not connected to this junction
            return null;
            //throw new Exception("Specified fromline "+ fromline +" is not a connection of this junction.");
        }
    }

    public void SwitchLine() {
        direction = !direction;
        if (direction) {
            gameObject.GetComponent<Renderer>().material.color = new Color(255, 0, 0);
        }else {
            gameObject.GetComponent<Renderer>().material.color = new Color(0, 255, 255);
        }
    }
}
